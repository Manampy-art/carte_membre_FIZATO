"""
Script pour cr√©er des donn√©es de test pour FIZATO
"""
import os
import sys
import django
from datetime import date

# Configuration Django
sys.path.append('/home/stephanson/Vid√©os/carte_membre_FIZATO')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion_cartes.settings')
django.setup()

from membres.models import InfoFizato, FonctionBureau, MembreBureau, Membre

def create_fizato_data():
    """Cr√©er les donn√©es de base pour FIZATO"""
    
    # 1. Cr√©er les informations FIZATO
    info_fizato, created = InfoFizato.objects.get_or_create(
        nom="FI.ZA.TO",
        defaults={
            'nom_complet': "F√©d√©ration Interuniversitaire des Zones Administratives et Techniques de l'Organisation",
            'date_creation': date(2020, 1, 15),
            'devise': "Unis dans la diversit√©, forts dans l'action",
            'fondateurs': "Dr. Rakoto Maminiaina, Prof. Andry Rasoloson, Ing. Hery Rajaonarison",
            'description': """FI.ZA.TO est une organisation f√©d√©ratrice qui regroupe plusieurs associations universitaires et techniques. 
Notre mission est de promouvoir l'excellence acad√©mique, de faciliter l'√©change entre les diff√©rentes institutions et de contribuer au d√©veloppement socio-√©conomique de Madagascar.

Nous ≈ìuvrons pour l'unit√© dans la diversit√©, en rassemblant des √©tudiants et professionnels de diff√©rents horizons autour d'objectifs communs de d√©veloppement et d'entraide."""
        }
    )
    
    if created:
        print("‚úÖ Informations FIZATO cr√©√©es avec succ√®s")
    else:
        print("‚ÑπÔ∏è Informations FIZATO d√©j√† existantes")
    
    # 2. Cr√©er les fonctions du bureau
    fonctions_data = [
        {"nom": "Pr√©sident", "niveau": 1, "desc": "Dirige l'organisation et repr√©sente FIZATO"},
        {"nom": "Vice-pr√©sident", "niveau": 2, "desc": "Assiste le pr√©sident et le remplace en cas d'absence"},
        {"nom": "Secr√©taire g√©n√©ral", "niveau": 3, "desc": "G√®re la correspondance et les proc√®s-verbaux"},
        {"nom": "Tr√©sorier", "niveau": 4, "desc": "Responsable des finances et de la comptabilit√©"},
        {"nom": "Responsable communication", "niveau": 5, "desc": "G√®re la communication interne et externe"},
        {"nom": "Responsable technique", "niveau": 6, "desc": "Coordonne les aspects techniques et logistiques"},
    ]
    
    print("\nüìã Cr√©ation des fonctions du bureau :")
    for fonction_data in fonctions_data:
        fonction, created = FonctionBureau.objects.get_or_create(
            nom=fonction_data["nom"],
            defaults={
                'niveau_hierarchique': fonction_data["niveau"],
                'description': fonction_data["desc"]
            }
        )
        if created:
            print(f"  ‚úÖ {fonction_data['nom']} (niveau {fonction_data['niveau']})")
        else:
            print(f"  ‚ÑπÔ∏è {fonction_data['nom']} d√©j√† existant")
    
    print(f"\nüéâ Configuration FIZATO termin√©e !")
    print(f"üìä Statistiques :")
    print(f"   - Informations FIZATO : {'Cr√©√©es' if created else 'D√©j√† pr√©sentes'}")
    print(f"   - Fonctions bureau : {FonctionBureau.objects.count()} fonctions")
    print(f"   - Membres bureau : {MembreBureau.objects.filter(est_actuel=True).count()} membres actuels")

if __name__ == "__main__":
    create_fizato_data()
